# Docker ignore file for frontend optimization
# Excludes unnecessary files from build context

# Version control
.git
.gitignore
.gitattributes

# Documentation
README.md
*.md
docs/

# Dependencies
node_modules/

# Development files
.env*
.vscode/
.idea/
*.swp
*.swo
*~

# Testing and coverage
coverage/
.nyc_output/
test-results/
tests/
playwright-report/
blob-report/

# Build artifacts
dist/
build/
.next/
out/
.cache/

# IDE files
.vscode/
.idea/
*.sublime-*

# OS files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Logs
*.log
logs/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*

# Temporary files
*.tmp
*.temp
.tmp/

# Docker files (avoid recursion)
Dockerfile*
.dockerignore
docker-compose*.yml

# CI/CD
.github/
.gitlab-ci.yml
.travis.yml
.circleci/

# Development tools
.eslintcache
.stylelintcache
.parcel-cache/

# Backup files
*.bak
*.backup

# Environment files (should be passed as build args)
.env
.env.local
.env.development.local
.env.test.local
.env.production.local

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Optional npm cache directory
.npm

# Optional REPL history
.node_repl_history

# Yarn Integrity file
.yarn-integrity

# dotenv environment variables file
.env

# TypeScript cache
*.tsbuildinfo

# Optional eslint cache
.eslintcache

# Microbundle cache
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# parcel-bundler cache (https://parceljs.org/)
.cache
.parcel-cache

# Storybook build outputs
.out
.storybook-out
